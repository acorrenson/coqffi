(* This file has been initially generated by coqffi from int32.mli,
   then has been manually modified. *)

From Coq Require Import Extraction PrimFloat.
From CoqFFI Require Import Int String.

Declare Scope i32_scope.
Delimit Scope i32_scope with i32.

Axiom i32 : Type.

Bind Scope i32_scope with i32.

Extract Constant i32 => "int32".

Definition t : Type := i32.

Bind Scope i32_scope with t.

Extract Constant t => "Stdlib.Int32.t".

(** * Pure functions *)

Module Int32.
  Axiom zero : i32.
  Axiom one : i32.
  Axiom minus_one : i32.

  Axiom neg : i32 -> i32.
  Axiom add : i32 -> i32 -> i32.
  Axiom sub : i32 -> i32 -> i32.
  Axiom mul : i32 -> i32 -> i32.
  Axiom div : i32 -> i32 -> i32.
  Axiom unsigned_div : i32 -> i32 -> i32.
  Axiom rem : i32 -> i32 -> i32.
  Axiom unsigned_rem : i32 -> i32 -> i32.
  Axiom succ : i32 -> i32.
  Axiom pred : i32 -> i32.
  Axiom abs : i32 -> i32.
  Axiom max_int : i32.
  Axiom min_int : i32.
  Axiom logand : i32 -> i32 -> i32.
  Axiom logor : i32 -> i32 -> i32.
  Axiom logxor : i32 -> i32 -> i32.
  Axiom lognot : i32 -> i32.
  Axiom shift_left : i32 -> i63 -> i32.
  Axiom shift_right : i32 -> i63 -> i32.
  Axiom shift_right_logical : i32 -> i63 -> i32.
  Axiom of_int : i63 -> i32.
  Axiom to_int : i32 -> i63.
  Axiom unsigned_to_int : i32 -> option i63.
  Axiom of_float : float -> i32.
  Axiom to_float : i32 -> float.
  Axiom of_string : string -> i32.
  Axiom of_string_opt : string -> option i32.
  Axiom to_string : i32 -> string.
  Axiom bits_of_float : float -> i32.
  Axiom float_of_bits : i32 -> float.
  Axiom compare : t -> t -> i63.
  Axiom unsigned_compare : t -> t -> i63.
  Axiom equal : t -> t -> bool.
  Axiom format : string -> i32 -> string.

  Extract Constant zero => "Stdlib.Int32.zero".
  Extract Constant one => "Stdlib.Int32.one".
  Extract Constant minus_one => "Stdlib.Int32.minus_one".
  Extract Constant neg => "Stdlib.Int32.neg".
  Extract Constant add => "Stdlib.Int32.add".
  Extract Constant sub => "Stdlib.Int32.sub".
  Extract Constant mul => "Stdlib.Int32.mul".
  Extract Constant div => "Stdlib.Int32.div".
  Extract Constant unsigned_div => "Stdlib.Int32.unsigned_div".
  Extract Constant rem => "Stdlib.Int32.rem".
  Extract Constant unsigned_rem => "Stdlib.Int32.unsigned_rem".
  Extract Constant succ => "Stdlib.Int32.succ".
  Extract Constant pred => "Stdlib.Int32.pred".
  Extract Constant abs => "Stdlib.Int32.abs".
  Extract Constant max_int => "Stdlib.Int32.max_int".
  Extract Constant min_int => "Stdlib.Int32.min_int".
  Extract Constant logand => "Stdlib.Int32.logand".
  Extract Constant logor => "Stdlib.Int32.logor".
  Extract Constant logxor => "Stdlib.Int32.logxor".
  Extract Constant lognot => "Stdlib.Int32.lognot".
  Extract Constant shift_left => "Stdlib.Int32.shift_left".
  Extract Constant shift_right => "Stdlib.Int32.shift_right".
  Extract Constant shift_right_logical => "Stdlib.Int32.shift_right_logical".
  Extract Constant of_int => "Stdlib.Int32.of_int".
  Extract Constant to_int => "Stdlib.Int32.to_int".
  Extract Constant unsigned_to_int => "Stdlib.Int32.unsigned_to_int".
  Extract Constant of_float => "Stdlib.Int32.of_float".
  Extract Constant to_float => "Stdlib.Int32.to_float".
  Extract Constant of_string => "Stdlib.Int32.of_string".
  Extract Constant of_string_opt => "Stdlib.Int32.of_string_opt".
  Extract Constant to_string => "Stdlib.Int32.to_string".
  Extract Constant bits_of_float => "Stdlib.Int32.bits_of_float".
  Extract Constant float_of_bits => "Stdlib.Int32.float_of_bits".
  Extract Constant compare => "Stdlib.Int32.compare".
  Extract Constant unsigned_compare => "Stdlib.Int32.unsigned_compare".
  Extract Constant equal => "Stdlib.Int32.equal".
  Extract Constant format => "Stdlib.Int32.format".
End Int32.

Notation "'-' x" := (Int32.neg x) : i32_scope.
Notation "x '+' y" := (Int32.add x y) : i32_scope.
Notation "x '-' y" := (Int32.sub x y) : i32_scope.
Notation "x '*' y" := (Int32.mul x y) : i32_scope.
Notation "x '/' y" := (Int32.div x y) : i32_scope.
Notation "x =? y" := (Int32.equal x y) : i32_scope.
